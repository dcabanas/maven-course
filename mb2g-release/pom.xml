<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>guru.springframework</groupId>
    <artifactId>mb2g-release-plugin</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>11</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <junit.version>5.9.0</junit.version>
        <!-- this property is needed so we can configure in settings.xml under .m2
             the server id with this id in the property,
             the necessary credentials (user/password or keys in case of ssh)
             to authenticate against the scm host we are using in scm tag -->
        <project.scm.id>github</project.scm.id>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <scm>
        <!-- the write url -->
        <developerConnection>scm:git:https://github.com/springframeworkguru/mb2g-release-plugin.git</developerConnection>
        <!-- the read url -->
        <url>https://github.com/springframeworkguru/mb2g-release-plugin</url>
        <tag>HEAD</tag>
    </scm>

    <build>
        <extensions>
            <extension>
                <groupId>io.packagecloud.maven.wagon</groupId>
                <artifactId>maven-packagecloud-wagon</artifactId>
                <version>0.0.6</version>
            </extension>
        </extensions>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.1</version>
            </plugin>
            <!-- the prepare goal "tags" the release in the scm we are using
                 and changes our pom version

                 if the rollback happens, the temporary files created by prepare
                 are removed, the pom version is reverted but the remote tag
                 stays (best way to remove is through SourceTree) PS: 3.0.0-M1 already does that

                 the perform goal commits and pushes to the scm,
                 deletes the temporary files created by prepare
                 and also publishes to the repository manager we are using (Nexus) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>3.0.0-M6</version>
            </plugin>
        </plugins>
    </build>

    <distributionManagement>
        <repository>
            <id>packagecloud.release</id>
            <url>packagecloud+https://packagecloud.io/springframeworkguru/release</url>
        </repository>
        <snapshotRepository>
            <id>packagecloud.snapshot</id>
            <url>packagecloud+https://packagecloud.io/springframeworkguru/snapshot</url>
        </snapshotRepository>
    </distributionManagement>
</project>